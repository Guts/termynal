[tool.poetry]
name = "termynal"
version = "0.2.0"
description = ""
authors = ["Danil Akhtarov <daxartio@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/daxartio/termynal"
homepage = "https://pypi.org/project/termynal"
keywords = []

[tool.poetry.plugins."mkdocs.plugins"]
"termynal" = "termynal.plugin:TermynalPlugin"

[tool.poetry.plugins."markdown.extensions"]
"termynal" = "termynal.markdown:TermynalExtension"

[tool.poetry.dependencies]
python = "^3.7.2"
markdown = "*"
mkdocs = {version = "*", optional = true}

[tool.poetry.dev-dependencies]
asynctest = "*"
autoflake = "*"
black = {version = "*", allow-prereleases = true}
flake8 = "*"
flake8-annotations-complexity = "*"
flake8-bandit = "*"
flake8-breakpoint = "*"
flake8-bugbear = "*"
flake8-builtins = "*"
flake8-comprehensions = "*"
flake8-eradicate = "*"
flake8-if-expr = "*"
flake8-isort = "*"
flake8-logging-format = "*"
flake8-print = "*"
flake8-pytest = "*"
flake8-pytest-style = "*"
flake8-requirements = "*"
flake8-return = "*"
git-changelog = "*"
mkdocs-material = "*"
mkdocstrings = "*"
mutmut = "*"
mypy = "*"
pep8-naming = "*"
pylint = "^2.15.3"
pytest = "*"
pytest-asyncio = "*"
pytest-cov = "*"
pytest-deadfixtures = "*"
pytest-mock = "*"
safety = "*"
toml = "*"
unify = "*"
types-Markdown = "^3.4.2"

[tool.poetry.extras]
mkdocs = ["mkdocs"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
ignore_missing_imports = true
no_implicit_optional = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.isort]
profile = "black"

[tool.coverage.run]
omit = ["tests/*", "**/__main__.py", "**/.venv/*", "**/site-packages/*"]
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = true
fail_under = 93.8

[tool.pylint]
good-names = ["i","j","k","e","x","_","pk","id"]
max-args = 5
max-attributes = 10
max-bool-expr = 5
max-module-lines = 300
max-nested-blocks = 2
max-public-methods = 30
max-returns = 5
max-statements = 30
output-format = "colorized"
ignored-classes = ["contextlib.closing"]
disable = [
    "C0111", # Missing module docstring (missing-docstring)
    "R0901", # Too many ancestors (m/n) (too-many-ancestors)
    "R0903", # Too few public methods (m/n) (too-few-public-methods)
    "R0801", # duplicate-code
]

[tool.black]
skip-string-normalization = true

[tool.pytest.ini_options]
asyncio_mode = "strict"
addopts = "--strict-markers --showlocals --verbosity 2"
log_level = "DEBUG"

[tool.bandit]
exclude_dirs = ["tests"]
